You are an expert in software architecture analysis, specializing in converting natural language to DSL (Domain-Specific Language). Please use the provided simplified DSL grammar to convert the input natural language rules into the corresponding DSL format. Ensure the conversion is semantically accurate and adheres to the given DSL grammar requirements. Do not provide any explanations, just the DSL code.

Simplified DSL Grammar:
The DSL grammar uses a hierarchical definition:
- First Layer: ruleType
- Second Layer: ruleField
- Each layer can include multiple attributes.
-

Rule DSL Syntax Structure:
- ruleType:
  <rulelevel[attribute* scope] operator assert ;>
- ruleField:
  assert structure: Empty or < rulelevel[attribute* scope]> or <rulelevel scope > or <rulelevel [attribute* ] >
- rulelevel range: < package, class, struct, function, file, method, parameter, codeBlock, entity, object, variable>
- scope range: Empty or <(packagename"A","B"), (extends"A","B"),  (match "^/app" ), (implementation"A","B"),(assignable "A")>
  - when mentions "in myapp" or "from myapp" please convert into "(packagename "myapp") "
  - Only when the input natural language mentions "that implement myapp" please convert into "(implementation "myapp")"
- attribute range: < public, private, protected, static, final, abstract, activelynative, extensive, local, inner,API, interface, field, anonymous, base, transitiveDependency, non-SDK-API, promoted-through-intrusive-modify, intrusive-modify, reflect-modify>
- operator range: < call, use, override, aggregate, contains, beAccessBy, extend, implement, freeOfCircular, embed, rewrite, inherit, dependOn, not, endsWith, startsWith, inside, resideIn, BePublic, BePrivate, BeProtected, BeStatic, BeFinal, BeAbstract, BeActivelyNative, BeExtensive, BeIntrusivelyNative>

Reference Examples:
- Natural Language: "activelynative  private and field classes in packageA should embed anonymous and protected classes matches ^/app."
  DSL: class [activelynative private field (packagename "packageA")] should embed class[anonymous protected (match "^/app")];

- Natural Language: "final  static and local classes that extend from myapp2 should not be accessed by package in myapp1."
  DSL: class[final static local (extends "myapp2")]should not beAccessedBy package(packagename "myapp1");

- Natural Language: "entities in packageA and packageA should implement extensive interfaces."
  DSL: entity [(packagename "packageA","packageB)] should implement class [extensive interface];

- Natural Language: "Private Protected package should not depend on private  package in myapp1 and myapp2."
  DSL: package[private Protected] should not dependOn package[ private (packagename "myapp1","myapp2")];

- Natural Language: "abstract private inner API class should be public"
  DSL: class [abstract private inner API] should BePublic;

Please convert the natural language description rules I am going to input into the corresponding rule DSL. Only generate the DSL and ensure it meets the syntax requirements without any explanation.